#{ global scope code
:
  abc
#=
  abc;
#}

#{ non-method scope
:{
#=
(function() {
})();
#}

#{ non-method scope with statements
:{
  a := b

  c := d
#=
(function() {
  var a;
  a = b;

  var c;
  c = d;
})();
#}

#{ global function
:=func_name ##\n\
  param0\b\$
  param1\b\? value
  a := param0
  c := param1
#=
/**
 * @param {boolean} param0
 * @param {boolean=} opt_param1
 * @return {number}
 */
var func_name = function(param0, opt_param1){
  var param1 = opt_param1 === undefined ? (value) : opt_param1;
  var a;
  a = param0;
  var c;
  c = param1;
};
{
  fns:[
    {
      name:func_name
      args:[
        Boolean
        Boolean
      ]
    }
  ]
}

#}

#{ global function with anonymous function
:=func_name ##\n\
  param0\b\$
  param1\b\? value
  func(##)
    \s\
    param2\n|s\$
    param3\A.<s>\? []
    do_something()
    a := param0
  c := param1
#=
/**
 * @param {boolean} param0
 * @param {boolean=} opt_param1
 * @return {number}
 */
var func_name = function(param0, opt_param1){
  var param1 = opt_param1 === undefined ? (value) : opt_param1;
  func(
  /**
   * @param {number|string} param2
   * @param {Array.<string>=} opt_param3
   * @return {string}
   */
  function(param2, opt_param3){
    var param3 = opt_param3 === undefined ? ([]) : opt_param3;
    do_something();
    var a;
    a = param0;
  });
  var c;
  c = param1;
};
{
  fns:[
    {
      name:func_name
      args:[
        Boolean
        Boolean
      ]
    }
  ]
}

#}

#{ block string
:'str_name
  line0
    line1

  line3
#=
var str_name =
  'line0\n' +
  '  line1\n' +
  '\n' +
  'line3\n';
#}

#{ code section with no blank line btwn
:
  line1
:
  line2
#=
  line1;
  line2;
#}
