#{ class method
::classname

:methodname
:@methodname_2
#=
/**
 * @constructor
 * @struct
 * @suppress {checkStructDictInheritance}
 */
classname = function() {
var self = this;
};
classname.prototype._classname = 'classname';

classname.prototype.methodname = function() {
var self = this;
};
/** @private */
classname.prototype._methodname_2 = function() {
var self = this;
};
{
  "cls": [
    {
      "name": "classname",
      "args": [],
      "methods": [
        {
          "name": "methodname",
          "args": [],
          "methods": []
        },
        {
          "name": "_methodname_2",
          "args": [],
          "methods": []
        }
      ]
    }
  ],
  "fns": []
}
#}

#{ parameters
::classname

:methodname\s\
  param_a\s\$
  param_b\s\? init_val
#=
/**
 * @constructor
 * @struct
 * @suppress {checkStructDictInheritance}
 */
classname = function() {
var self = this;
};
classname.prototype._classname = 'classname';

/**
 * @param {string} param_a
 * @param {string=} opt_param_b
 * @return {string}
 */
classname.prototype.methodname = function(param_a, opt_param_b) {
  var self = this;
  var param_b = opt_param_b === undefined ? (init_val) : opt_param_b;
};
{
  "cls": [
    {
      "name": "classname",
      "args": [],
      "methods": [
        {
          "name": "methodname",
          "args": [
            "String",
            "String"
          ],
          "methods": []
        }
      ]
    }
  ],
  "fns": []
}
#}

#{ overriding method
::Classname^Parent
  ^()

:methodname^\n\
  param_a\s\$
  param_b\s\? init_val

:@methodname2^\n\
  param_a\s\$
  param_b\s\? init_val
#=
/**
 * @constructor
 * @extends {Parent}
 * @struct
 * @suppress {checkStructDictInheritance}
 */
Classname = function() {
  var self = this;
  Parent.call(this);
};
goog.inherits(Classname, Parent);
Classname.prototype._classname = 'Classname';

/** @override */
Classname.prototype.methodname = function(param_a, opt_param_b) {
  var self = this;
  var param_b = opt_param_b === undefined ? (init_val) : opt_param_b;
};

/**
 * @override
 * @private
 */
Classname.prototype._methodname2 = function(param_a, opt_param_b) {
  var self = this;
  var param_b = opt_param_b === undefined ? (init_val) : opt_param_b;
};
{
  "cls": [
    {
      "name": "Classname",
      "args": [],
      "parent": "Parent",
      "methods": [
        {
          "name": "methodname",
          "args": [
            "String",
            "String"
          ],
          "methods": []
        },
        {
          "name": "_methodname2",
          "args": [
            "String",
            "String"
          ],
          "methods": []
        }
      ]
    }
  ],
  "fns": []
}
#}
