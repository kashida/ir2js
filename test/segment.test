#{: string should not interfere
if ('')
  xyz
#=
if (''){
  xyz;
}
#}

#{: string with escape
if (!new RegExp('^[\\\'\\"]').test(seg))
  =>
#=
if (!new RegExp('^[\\\'\\"]').test(seg)){
  return;
}
#}

#{: single and double quotes
'abc"' + "def'" + '//'
#=
'abc"' + "def'" + '//';
#}

#{: regular expression
@a * ~/\/ '' " [abc] # \// + @.b
#=
_self._a * /\/ '' " [abc] # \// + _self.b;
#}

#{: cast should not happen in re
~/ \a Array.<Object> \b /
#=
/ \a Array.<Object> \b /;
#}

#{: end of line comment
abc // some comment @.
def(##)
  a\n\$   // comment for a.
  b\n\? 0 // comment for b.
  c\n\?   // comment for c.
#=
abc;
// some comment @.
def(
/** @param {number} opt_a */
function(a, opt_b, opt_c){
  // comment for a.
  var b = opt_b === undefined ? (0) : opt_b;
  // comment for b.
  var c = opt_c === undefined ? (null) : opt_c;
  // comment for c.
});
#}
