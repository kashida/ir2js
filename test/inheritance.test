#{ inheritance
::classname ^~~parent
  @param_a\s\$
  @param_b\s\? init_val
  do_something()
  ^(param_b, something_else())
#=
/**
 * @param {string} param_a
 * @param {string=} opt_param_b
 * @constructor
 * @extends {_o_.parent}
 * @struct
 * @suppress {checkStructDictInheritance}
 */
_o_.classname = function(param_a, opt_param_b) {
  var self = this;
  /** @private {string} */
  this._param_a = param_a;
  /** @private {string} */
  this._param_b = opt_param_b === undefined ? (init_val) : opt_param_b;
  do_something();
  _o_.parent.call(this, param_b, something_else());
};
goog.inherits(_o_.classname, _o_.parent);
_o_.classname.prototype._classname = '_o_.classname';
{
  "cls": [
    {
      "name": "_o_.classname",
      "args": [
        "String",
        "String"
      ],
      "parent": "_o_.parent",
      "methods": []
    }
  ],
  "fns": []
}
#}

#{ method call parent
::classname ^parent
  do_something()
  ^(something_else())

:method
  param\s\$
  do_something()
  ^(param, '')
#=
/**
 * @constructor
 * @extends {parent}
 * @struct
 * @suppress {checkStructDictInheritance}
 */
_o_.classname = function() {
  var self = this;
  do_something();
  parent.call(this, something_else());
};
goog.inherits(_o_.classname, parent);
_o_.classname.prototype._classname = '_o_.classname';

/** @param {string} param */
_o_.classname.prototype.method = function(param) {
  var self = this;
  do_something();
  parent.prototype.method.call(this, param, '');
};
{
  "cls": [
    {
      "name": "_o_.classname",
      "args": [],
      "parent": "parent",
      "methods": [
        {
          "name": "method",
          "args": [
            "String"
          ],
          "methods": []
        }
      ]
    }
  ],
  "fns": []
}
#}

#{ super calls with blocks.
::classname ^~~parent
  do_something()
  ^(#)
    another_line(##)
      x\s\$
      func(x)

:method
  param\s\$
  do_something()
  ^(param, '', #+, #)
    method()
    a + b + c
    --
    another_method()

:method2
  ^()
#=
/**
 * @constructor
 * @extends {_o_.parent}
 * @struct
 * @suppress {checkStructDictInheritance}
 */
_o_.classname = function() {
  var self = this;
  do_something();
  _o_.parent.call(this, (
    another_line(
    /** @param {string} x */
    function(x) {
      func(x);
    })
  ));
};
goog.inherits(_o_.classname, _o_.parent);
_o_.classname.prototype._classname = '_o_.classname';

/** @param {string} param */
_o_.classname.prototype.method = function(param) {
  var self = this;
  do_something();
  _o_.parent.prototype.method.call(this, param, '', (
    (method()) +
    (a + b + c)
  ), (
    another_method()
  ));
};

_o_.classname.prototype.method2 = function() {
  var self = this;
  _o_.parent.prototype.method2.call(this);
};
{
  "cls": [
    {
      "name": "_o_.classname",
      "args": [],
      "parent": "_o_.parent",
      "methods": [
        {
          "name": "method",
          "args": [
            "String"
          ],
          "methods": []
        },
        {
          "name": "method2",
          "args": [],
          "methods": []
        }
      ]
    }
  ],
  "fns": []
}
#}
