:
  _fs := require('fs')
  _ir2js := require('ir2js')

:::mergeToFile = ##
  base_dir\s\$
  in_files\A.<s>\$
  out_file\s\$
  out := _fs.openSync(out_file, 'w')

  pkgs := _ir2js.createPackageList(base_dir, in_files)
  _fs.writeSync(out, pkgs.join('\n'), null)
  _fs.writeSync(out, '\n\n', null)

  _ir2js.createSortedList(in_files).forEach(##)
    file\s\$
    _fs.writeSync(out, _fs.readFileSync(file, 'utf8'), null)

  _fs.closeSync(out)

:
  argv := #.
    require('optimist')
    // Operation modes.
    boolean('sort')
    boolean('pkglist')
    boolean('merge')
    // Input and output.
    string('basedir')
    string('outfile')
    string('outdir')
    argv

  base_dir := argv.basedir
  input_files := argv._
  if argv.sort
    list := _ir2js.createSortedList(input_files)
    console.log(list.join(' '))
  else if argv.pkglist
    pkgs := _ir2js.createPackageList(base_dir, input_files)
    console.log(pkgs.join('\n'))
  else if argv.merge
    mergeToFile(base_dir, input_files, argv.outfile)
  else
    // Compile mode.
    try
      _ir2js.compileFiles(base_dir, input_files, argv.outdir)
    catch e
      console.log(e)
      process.exit(-1)
  process.exit(0)
