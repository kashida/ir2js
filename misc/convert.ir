:
  _fs := require('fs')
  _ir2js := require('ir2js')

:mergeToFile = ##
  base_dir\s\$
  in_files\A.<s>\$
  out_file\s\$
  out := _fs.openSync(out_file, 'w')

  pkgs := _ir2js.createPackageList(base_dir, in_files)
  _fs.writeSync(out, pkgs.join('\n'), null)
  _fs.writeSync(out, '\n\n', null)

  _ir2js.createSortedList(in_files).forEach(##)
    file\s\$
    _fs.writeSync(out, _fs.readFileSync(file, 'utf8'), null)

  _fs.closeSync(out)

:
  // TODO: @enum
  ExecModes := {#}
    COMPILE: 0
    SORT: 1
    ARGTYPE: 2
    PKGLIST: 3
    MERGE: 4

  // TODO: @type {ExecModes}
  mode := ExecModes.COMPILE

  ReplyModes := {#}
    MSG: 0
    STDOUT: 1

  reply := ReplyModes.MSG


  // extract only the input / output file names.
  base_dir := ''
  out_dir := ''
  out_file := ''
  input_files := process.argv.filter(##)
    arg\s\$
    i\n\$
    // argv[0] is node binary and argv[1] is the executing js.
    if i < 2
      => false
    option_re := /--(\w+)(=(.*))?/.exec(arg)
    if !option_re
      => true
    opt_name := option_re[1]
    opt_param := option_re[3]
    if opt_name == 'basedir'
      base_dir = opt_param
    else if opt_name == 'outdir'
      out_dir = opt_param
    else if opt_name == 'outfile'
      out_file = opt_param
    else if opt_name == 'sort'
      mode = ExecModes.SORT
    else if opt_name == 'argtypes'
      mode = ExecModes.ARGTYPE
    else if opt_name == 'pkglist'
      mode = ExecModes.PKGLIST
    else if opt_name == 'merge'
      mode = ExecModes.MERGE
    else if opt_name == 'stdout'
      reply = ReplyModes.STDOUT
    else
      throw 'unknown command option: ' + opt_name
    => false

  switch mode
    case ExecModes.COMPILE
    _ir2js.compileFiles(base_dir, input_files, out_dir)
    break

    case ExecModes.SORT
    list := _ir2js.createSortedList(input_files)
    switch reply
      case ReplyModes.MSG
      process.send(list)
      break

      case ReplyModes.STDOUT
      console.log(list.join(' '))
      break
    break

    case ExecModes.ARGTYPE
    _ir2js.createArgTypes(base_dir, input_files)
    break

    case ExecModes.PKGLIST
    pkgs := _ir2js.createPackageList(base_dir, input_files)
    console.log(pkgs.join('\n'))
    break

    case ExecModes.MERGE
    mergeToFile(base_dir, input_files, out_file)
    break
  process.exit(0)
