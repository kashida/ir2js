::CodeBlockItr
  @input\input.Line\$
  @code\A.<parser.BlockMarker|s>\$
  @blocks\A.<IndentBlock>\$
  @block_cb&\?f(s, b)\
  @code_cb&\?f()\
  @cidx+\n\ 0
  @bidx+\n\ 0
  @lidx+\n\ 0
  @pidx+\n\ 0
  @extra_block+\b\ false

Valid only after run call.
:+ends_with_code\b\
  => #&&
    @code.length
    !(@code[@code.length - 1] instanceof parser.BlockMarker)
    !@extra_block

:run
  @code.forEach(##)
    frg\parser.BlockMarker|s\$
    i\n\$
    @cidx = i
    if frg instanceof parser.BlockMarker
      @handle_marker(frg)
    else
      if @code_cb
        @code_cb()

  if @lidx > 0
    @lidx = 0
    @bidx++

  // There may be one extra block.
  if @bidx > @blocks.length || @bidx + 1 < @blocks.length
    error(@input, '# blocks does not match #markers.')
    => false

  if @bidx < @blocks.length
    @extra_block = true
    @cidx++
    if @block_cb
      @block_cb('f', false)
    @bidx++
  => true

:@handle_marker
  marker\parser.BlockMarker\$
  if marker.type != 'l'
    if @lidx > 0
      @lidx = 0
      @bidx++

  if @block_cb
    @block_cb(marker.type, marker.type == 'f')

  if marker.type != 'l'
    @bidx++
  if marker.type == 'f'
    @pidx++
  if marker.type == 'l'
    @lidx++
