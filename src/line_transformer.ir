::LineTransformer
  @context\!context.Context\$
  @input\input.Line\$

:pkg_ref\s\
  name\s\$
  // relative package reference.
  => @context.pkg.replace(name)

:cast\s\
  type\s\$
  => '/** @type {' + new TypeDecoder(@context.pkg, type).output() + '} */'

:type\s\
  type\s\$
  => new TypeDecoder(@context.pkg, type).output()

:parent_call\s\
  args\s\$
  end_str := args ? ', ' + args + ')' : ')'
  if @context.is_ctor
    => @context.cls.ctor.parent_name() + '.call(this' + end_str
  else if @context.is_method
    => [#].join('')
      @context.cls.ctor.parent_name()
      '.prototype.'
      @context.name.id
      '.call(this'
      end_str
  else
    error(@input, 'parent call appeared in non-ctor / non-method.')
    => '%(' + args + ')'
