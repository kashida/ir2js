Comment section in a file.
::
  @lines\A<~Line>\$

:output
  result := []
  buffer := []
  state := 's'
  @lines.forEach(##)
    line\~Line\$
    switch state
      // starting state -- output all the blank lines as is.
      case 's'
      if !line.isBlank
        // first non-blank.
        result.push(buffer)
        buffer = []
        state = 'n'
      break

      // in non-blank line section.
      case 'n'
      if line.isBlank
        state = 'a'
      break

      // blank line immediately following a non-blank.
      case 'a'
      if line.isBlank
        // run of blank lines is long enough now. flush the comments.
        result.push(['/*', buffer.splice(0, buffer.length - 1), '*/'])
        state = 'b'
      else
        state = 'n'
      break

      // b: blank line section.
      case 'b'
      if !line.isBlank
        result.push(buffer)
        buffer = []
        state = 'n'
      break
    buffer.push(line.line)

  switch state
    // still in the starting state.
    case 's'
    result.push(buffer)
    break

    // in non-blank line section.
    case 'n'
    result.push(['/*', buffer, '*/'])
    break

    // one blank line immediately following a non-blank.
    case 'a'
    // run of blank lines is long enough now. flush the comments.
    result.push(['/*', buffer.splice(0, buffer.length - 1), '*/'])
    result.push(buffer)
    break

    // b: blank line section.
    case 'b'
    result.push(buffer)
    break

  => result
