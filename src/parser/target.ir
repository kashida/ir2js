Wrapper for the PEGJS's parse method.
Specific for a particular target (i.e. rule).

:
  _parser := require('syntax')

::Target
  @rule\s\$

:run\?%.Result\
  input\!A.<InputLine>|s\$
  @xformer\LineTransformer\?
  show_error_line\b\?
  if (!(input instanceof Array))
    input = [new InputLine(input, 0)]

  lines := input.map(##).join('\n')
    input\InputLine\$
    => input.line
  try
    result := _parser.parse(lines, @rule)
  catch e
    if (show_error_line)
      // TODO: make this display multi-line right.
      console.error('[FAIL] error for ' + @rule)
      console.error('I: ' + lines)
      sp := '   '
      i := 0
      for ; i < e.offset; i++
        sp += ' '
      console.error(sp + '^')
      console.error('E: ' + e)
    => null
  b := new %.TokenListBuilder(result)
  b.xformer = @xformer
  => b.result(input)
