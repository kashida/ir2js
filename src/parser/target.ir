Wrapper for the PEGJS's parse method.
Specific for a particular target (i.e. rule).

:
  _parser := require('syntax')

::Target
  @rule\s\$

:run\?%.Result\
  line\!A.<input.Line>|s\$
  xformer\LineTransformer\?
  show_error_line\b\?
  if !(line instanceof Array)
    line = [new input.Line(line, 0)]

  lines := line.map(##).join('\n')
    l\input.Line\$
    => l.line
  try
    result := _parser.parse(lines, @rule)
  catch e
    if show_error_line
      // TODO: make this display multi-line right.
      console.error('[FAIL] error for ' + @rule)
      console.error('I: ' + lines)
      sp := '   '
      i := 0
      for ; i < e.offset; i++
        sp += ' '
      console.error(sp + '^')
      console.error('E: ' + e)
    => null
  b := new %.TokenListBuilder(result)
  if xformer
    b.xformer = xformer
  => b.result(line)
